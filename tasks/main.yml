---
- name: Gather system facts
  ansible.builtin.setup:
    gather_subset: "!all,distribution"
  changed_when: false

- name: Fail if not running on supported OS
  ansible.builtin.fail:
    msg: "Homebrew is only supported on macOS and Linux."
  when: ansible_facts.system not in ["Darwin", "Linux"]

- name: Fail if POSIXLY_CORRECT is set
  ansible.builtin.fail:
    msg: "Bash must not run in POSIX mode. Please unset POSIXLY_CORRECT."
  when: lookup('env', 'POSIXLY_CORRECT') != ""

- name: Fail if running as root (unless in container)
  ansible.builtin.fail:
    msg: "Don't run this as root!"
  when: ansible_facts.effective_user_id == 0 and not ansible_facts.is_container

- name: Check if Homebrew is already installed
  ansible.builtin.stat:
    path: "{{ homebrew_prefix }}/bin/brew"
  register: homebrew_installed
  changed_when: false

- name: Include macOS tasks
  ansible.builtin.include_tasks: macos.yml
  when: ansible_facts.system == "Darwin"

- name: Include Linux tasks
  ansible.builtin.include_tasks: linux.yml
  when: ansible_facts.system == "Linux"

- name: Update Homebrew
  ansible.builtin.command: "{{ homebrew_prefix }}/bin/brew update --force --quiet"
  environment:
    HOMEBREW_NO_ANALYTICS_THIS_RUN: "1"
    HOMEBREW_NO_ANALYTICS_MESSAGE_OUTPUT: "1"
  when: not homebrew_installed.stat.exists
  changed_when: false

- name: Verify Homebrew installation
  ansible.builtin.command: "{{ homebrew_prefix }}/bin/brew --version"
  register: homebrew_version
  changed_when: false

- name: Display Homebrew version
  ansible.builtin.debug:
    msg: "Homebrew version: {{ homebrew_version.stdout }}"
  when: homebrew_version.rc == 0
